{"id":"1","version":"1.6","text":"Master Node Security Configuration","node_type":"master","tests":[{"section":"1.1","pass":0,"fail":0,"warn":0,"desc":"API Server","results":[{"test_number":"1.1.2","test_desc":"Ensure that the --anonymous-auth argument is set to false (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--anonymous-auth=false\""],"status":"PASS"},{"test_number":"1.1.3","test_desc":"Ensure that the --basic-auth-file argument is not set (Scored)","type":"","test_info":["Follow the documentation and configure alternate mechanisms for authentication. Then, edit the /etc/kubernetes/apiserver file on the master node and remove the \"--basic-auth-file=\u003cfilename\u003e\" argument from the KUBE_API_ARGS parameter."],"status":"PASS"},{"test_number":"1.1.4","test_desc":"Ensure that the --insecure-allow-any-token argument is not set (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and remove the --insecure-allow-any-token argument from the KUBE_API_ARGS parameter."],"status":"PASS"},{"test_number":"1.1.5","test_desc":"Ensure that the --kubelet-https argument is set to true (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and remove the --kubelet-https argument from the KUBE_API_ARGS parameter."],"status":"PASS"},{"test_number":"1.1.6","test_desc":"Ensure that the --insecure-bind-address argument is not set (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and remove the --insecure-bind-address argument from the KUBE_API_ADDRESS parameter."],"status":"PASS"},{"test_number":"1.1.7","test_desc":"Ensure that the --insecure-port argument is set to 0 (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set --insecure-port=0 in the KUBE_API_PORT parameter."],"status":"PASS"},{"test_number":"1.1.8","test_desc":"Ensure that the --secure-port argument is not set to 0 (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and either remove the --secure-port argument from the KUBE_API_ARGS parameter or set it to a different desired port."],"status":"PASS"},{"test_number":"1.1.9","test_desc":"Ensure that the --profiling argument is set to false (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--profiling=false\""],"status":"PASS"},{"test_number":"1.1.10","test_desc":"Ensure that the --repair-malformed-updates argument is set to false (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--repair-malformed-updates=false\""],"status":"PASS"},{"test_number":"1.1.11","test_desc":"Ensure that the admission control policy is not set to AlwaysAdmit (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_ADMISSION_CONTROL parameter to a value that does not include AlwaysAdmit"],"status":"PASS"},{"test_number":"1.1.15","test_desc":"Ensure that the admission control policy is set to NamespaceLifecycle (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_ADMISSION_CONTROL parameter to \"--admission-control=NamespaceLifecycle,...\""],"status":"PASS"},{"test_number":"1.1.16","test_desc":"Ensure that the --audit-log-path argument is set as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--audit-log-path=\u003cfilename\u003e\""],"status":"PASS"},{"test_number":"1.1.17","test_desc":"Ensure that the --audit-log-maxage argument is set to 30 or as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--audit-log-maxage=30\""],"status":"PASS"},{"test_number":"1.1.18","test_desc":"Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--audit-log-maxbackup=10\""],"status":"PASS"},{"test_number":"1.1.19","test_desc":"Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--audit-log-maxsize=100\""],"status":"PASS"},{"test_number":"1.1.20","test_desc":"Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to values other than \"--authorization-mode=AlwaysAllow\""],"status":"PASS"},{"test_number":"1.1.21","test_desc":"Ensure that the --token-auth-file parameter is not set (Scored)","type":"","test_info":["Follow the documentation and configure alternate mechanisms for authentication. Then, edit the /etc/kubernetes/apiserver file on the master node and remove the \"--tokenauth-file=\u003cfilename\u003e\" argument from the KUBE_API_ARGS parameter."],"status":"PASS"},{"test_number":"1.1.22","test_desc":"Ensure that the --kubelet-certificate-authority argument is set as appropriate (Scored)","type":"","test_info":["Follow the Kubernetes documentation and setup the TLS connection between the apiserver and kubelets. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--kubelet-certificate-authority=\u003cca-string\u003e\""],"status":"FAIL"},{"test_number":"1.1.23","test_desc":"Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate (Scored)","type":"","test_info":["Follow the Kubernetes documentation and set up the TLS connection between the apiserver and kubelets. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--kubelet-clientcertificate=\u003cpath/to/client-certificate-file\u003e\" and \"--kubelet-clientkey=\u003cpath/to/client-key-file\u003e\""],"status":"FAIL"},{"test_number":"1.1.24","test_desc":"Ensure that the --service-account-lookup argument is set to true (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--service-account-lookup=true\""],"status":"PASS"},{"test_number":"1.1.25","test_desc":"Ensure that the admission control policy is set to PodSecurityPolicy (Scored)","type":"","test_info":["Follow the documentation and create Pod Security Policy objects as per your environment. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_ADMISSION_CONTROL parameter to \"--admission-control=...,PodSecurityPolicy,...\""],"status":"PASS"},{"test_number":"1.1.26","test_desc":"Ensure that the --service-account-key-file argument is set as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--service-account-key-file=\u003cfilename\u003e\""],"status":"PASS"},{"test_number":"1.1.27","test_desc":"Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate (Scored","type":"","test_info":["Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to include \"--etcd-certfile=\u003cpath/to/clientcertificate-file\u003e\" and \"--etcd-keyfile=\u003cpath/to/client-key-file\u003e\""],"status":"PASS"},{"test_number":"1.1.28","test_desc":"Ensure that the admission control policy is set to ServiceAccount (Scored)","type":"","test_info":["Follow the documentation and create ServiceAccount objects as per your environment. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_ADMISSION_CONTROL parameter to \"--admissioncontrol=...,ServiceAccount,...\""],"status":"PASS"},{"test_number":"1.1.29","test_desc":"Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)","type":"","test_info":["Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to include \"--tls-cert-file=\u003cpath/to/tls-certificatefile\u003e\" and \"--tls-private-key-file=\u003cpath/to/tls-key-file\u003e\""],"status":"PASS"},{"test_number":"1.1.30","test_desc":"Ensure that the --client-ca-file argument is set as appropriate (Scored)","type":"","test_info":["Follow the Kubernetes documentation and set up the TLS connection on the apiserver. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to include \"--client-ca-file=\u003cpath/to/client-ca-file\u003e\""],"status":"PASS"},{"test_number":"1.1.31","test_desc":"Ensure that the --etcd-cafile argument is set as appropriate (Scored)","type":"","test_info":["Follow the Kubernetes documentation and set up the TLS connection between the apiserver and etcd. Then, edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to include \"--etcd-cafile=\u003cpath/to/ca-file\u003e\""],"status":"PASS"}]},{"section":"1.2","pass":0,"fail":0,"warn":0,"desc":"Scheduler","results":[{"test_number":"1.2.1","test_desc":"Ensure that the --profiling argument is set to false (Scored)","type":"","test_info":["Edit the /etc/kubernetes/scheduler file on the master node and set the KUBE_SCHEDULER_ARGS parameter to \"--profiling=false\""],"status":"PASS"}]},{"section":"1.3","pass":0,"fail":0,"warn":0,"desc":"Controller Manager","results":[{"test_number":"1.3.1","test_desc":"Ensure that the --terminated-pod-gc-threshold argument is set as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and set the KUBE_CONTROLLER_MANAGER_ARGS parameter to \"--terminated-pod-gcthreshold=\u003cappropriate-number\u003e\""],"status":"PASS"},{"test_number":"1.3.2","test_desc":"Ensure that the --profiling argument is set to false (Scored)","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and set the KUBE_CONTROLLER_MANAGER_ARGS parameter to \"--profiling=false\""],"status":"PASS"},{"test_number":"1.3.3","test_desc":"Ensure that the --insecure-experimental-approve-all-kubelet-csrs-for-group argument is not set (Scored)","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and remove the --insecure-experimental-approve-all-kubelet-csrs-for-group argument from the KUBE_CONTROLLER_MANAGER_ARGS parameter."],"status":"PASS"},{"test_number":"1.3.4","test_desc":"Ensure that the --use-service-account-credentials argument is set","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and set the KUBE_CONTROLLER_MANAGER_ARGS parameter to --use-service-account-credentials=true"],"status":"PASS"},{"test_number":"1.3.5","test_desc":"Ensure that the --service-account-private-key-file argument is set as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and set the KUBE_CONTROLLER_MANAGER_ARGS parameter to --service-account-private-keyfile=\u003cfilename\u003e"],"status":"PASS"},{"test_number":"1.3.6","test_desc":"Ensure that the --root-ca-file argument is set as appropriate (Scored)","type":"","test_info":["Edit the /etc/kubernetes/controller-manager file on the master node and set the KUBE_CONTROLLER_MANAGER_ARGS parameter to include --root-ca-file=\u003cfile\u003e"],"status":"PASS"}]},{"section":"1.4","pass":0,"fail":0,"warn":0,"desc":"Configure Files","results":[{"test_number":"1.4.11","test_desc":"Ensure that the etcd data directory permissions are set to 700 or more restrictive (Scored)","type":"","test_info":["On the etcd server node, get the etcd data directory, passed as an argument --data-dir , from the below command:\n ps -ef | grep etcd\n Run the below command (based on the etcd data directory found above). For example,\n chmod 700 /var/lib/etcd/default.etcd"],"status":"FAIL"},{"test_number":"1.4.12","test_desc":"Ensure that the etcd data directory ownership is set to etcd:etcd (Scored)","type":"","test_info":["On the etcd server node, get the etcd data directory, passed as an argument --data-dir , from the below command:\n ps -ef | grep etcd\n Run the below command (based on the etcd data directory found above). For example,\n chown etcd:etcd /var/lib/etcd/default.etcd"],"status":"FAIL"}]},{"section":"1.5","pass":0,"fail":0,"warn":0,"desc":"etcd","results":[{"test_number":"1.5.1","test_desc":"Ensure that the --cert-file and --key-file arguments are set as appropriate (Scored)","type":"","test_info":["Follow the etcd service documentation and configure TLS encryption."],"status":"PASS"},{"test_number":"1.5.2","test_desc":"Ensure that the --client-cert-auth argument is set to true (Scored)","type":"","test_info":["Edit the etcd envrironment file (for example, /etc/etcd/etcd.conf) on the etcd server node and set the ETCD_CLIENT_CERT_AUTH parameter to \"true\". Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and configure the startup parameter for --clientcert-auth and set it to \"${ETCD_CLIENT_CERT_AUTH}\""],"status":"PASS"},{"test_number":"1.5.3","test_desc":"Ensure that the --auto-tls argument is not set to true (Scored)","type":"","test_info":["Edit the etcd environment file (for example, /etc/etcd/etcd.conf) on the etcd server node and comment out the ETCD_AUTO_TLS parameter. Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and remove the startup parameter for --auto-tls."],"status":"PASS"},{"test_number":"1.5.4","test_desc":"Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate (Scored)","type":"","test_info":["Note: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. Follow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster."],"status":"PASS"},{"test_number":"1.5.5","test_desc":"Ensure that the --peer-client-cert-auth argument is set to true (Scored)","type":"","test_info":["Note: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. Edit the etcd environment file (for example, /etc/etcd/etcd.conf) on the etcd server node and set the ETCD_PEER_CLIENT_CERT_AUTH parameter to \"true\". Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and configure the startup parameter for --peer-client-cert-auth and set it to \"${ETCD_PEER_CLIENT_CERT_AUTH}\""],"status":"PASS"},{"test_number":"1.5.6","test_desc":"Ensure that the --peer-auto-tls argument is not set to true (Scored)","type":"","test_info":["Note: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable. Edit the etcd environment file (for example, /etc/etcd/etcd.conf) on the etcd server node and comment out the ETCD_PEER_AUTO_TLS parameter. Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and remove the startup parameter for --peer-auto-tls."],"status":"PASS"},{"test_number":"1.5.7","test_desc":"Ensure that the --wal-dir argument is set as appropriate (Scored)","type":"","test_info":["Edit the etcd environment file (for example, /etc/etcd/etcd.conf) on the etcd server node and set the ETCD_WAL_DIR parameter as appropriate. Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and configure the startup parameter for --wal-dir and set it to \"${ETCD_WAL_DIR}\""],"status":"FAIL"},{"test_number":"1.5.8","test_desc":"Ensure that the --max-wals argument is set to 0 (Scored)","type":"","test_info":["Edit the etcd environment file (for example, /etc/etcd/etcd.conf) on the etcd server node and set the ETCD_MAX_WALS parameter to 0. Edit the etcd startup file (for example, /etc/systemd/system/multiuser.target.wants/etcd.service) and configure the startup parameter for --max-wals and set it to \"${ETCD_MAX_WALS}\"."],"status":"FAIL"},{"test_number":"1.5.9","test_desc":"Ensure that a unique Certificate Authority is used for etcd (Not Scored)","type":"","test_info":["Follow the etcd documentation and create a dedicated certificate authority setup for the etcd service."],"status":"PASS"}]},{"section":"1.6","pass":0,"fail":0,"warn":0,"desc":"General Security Primitives","results":[{"test_number":"1.6.1","test_desc":"Ensure that the cluster-admin role is only used where required (Not Scored)","type":"manual","test_info":["Remove any unneeded clusterrolebindings: kubectl delete clusterrolebinding [name]"],"status":"WARN"},{"test_number":"1.6.2","test_desc":"Create Pod Security Policies for your cluster (Not Scored)","type":"manual","test_info":["Follow the documentation and create and enforce Pod Security Policies for your cluster. Additionally, you could refer the \"CIS Security Benchmark for Docker\" and follow the suggested Pod Security Policies for your environment."],"status":"WARN"},{"test_number":"1.6.3","test_desc":"Create administrative boundaries between resources using namespaces (Not Scored)","type":"manual","test_info":["Follow the documentation and create namespaces for objects in your deployment as you need them."],"status":"WARN"},{"test_number":"1.6.4","test_desc":"Create network segmentation using Network Policies (Not Scored)","type":"manual","test_info":["Follow the documentation and create NetworkPolicy objects as you need them."],"status":"WARN"},{"test_number":"1.6.5","test_desc":"Avoid using Kubernetes Secrets (Not Scored)","type":"manual","test_info":["Use other mechanisms such as vaults to manage your cluster secrets."],"status":"WARN"},{"test_number":"1.6.6","test_desc":"Ensure that the seccomp profile is set to docker/default in your pod definitions (Not Scored)","type":"manual","test_info":["Seccomp is an alpha feature currently. By default, all alpha features are disabled. So, you would need to enable alpha features in the apiserver by passing \"--feature- gates=AllAlpha=true\" argument.\n Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to \"--feature-gates=AllAlpha=true\" KUBE_API_ARGS=\"--feature-gates=AllAlpha=true\""],"status":"WARN"},{"test_number":"1.6.7","test_desc":"Apply Security Context to Your Pods and Containers (Not Scored)","type":"manual","test_info":["Follow the Kubernetes documentation and apply security contexts to your pods. For a suggested list of security contexts, you may refer to the CIS Security Benchmark for Docker Containers."],"status":"WARN"},{"test_number":"1.6.8","test_desc":"Configure Image Provenance using ImagePolicyWebhook admission controller (Not Scored)","type":"manual","test_info":["Follow the Kubernetes documentation and setup image provenance."],"status":"WARN"}]}],"total_pass":39,"total_fail":6,"total_warn":8}
